// /var/www/praxis-dev/backend-node/server.js
import express from 'express';
import routes from './routes/index.js';
import dotenv from 'dotenv';
import path from 'path';
import { fileURLToPath } from 'url';

console.log("--- Bare Minimum Server Attempt Starting ---");
console.log(`Node.js version: ${process.version}`);
console.log(`Attempting to load modules at: ${new Date().toISOString()}`);

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// It's okay if .env doesn't exist for this test
dotenv.config({ path: path.resolve(__dirname, '.env'), debug: process.env.DOTENV_DEBUG === 'true' });

const app = express();
const PORT = process.env.PORT || 4100;

app.use(express.json());
app.use('/api', routes);

app.listen(PORT, '0.0.0.0', () => {
  console.log(`Bare Minimum Server listening on port ${PORT}`);
});

process.on('uncaughtException', (err, origin) => {
  console.error(`UNCAUGHT EXCEPTION: Origin: ${origin}`, err);
  process.exit(1);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('UNHANDLED REJECTION: At:', promise, 'reason:', reason);
});
